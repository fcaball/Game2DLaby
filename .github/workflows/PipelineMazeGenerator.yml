name: Build MazeGenerator

on: push

permissions:
  actions: read  # Autorise l'acc√®s aux artifacts
  contents: write 

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Check disk usage before build
        run: Get-PSDrive
        shell: pwsh

      - name: Cache Library folder
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ runner.os }}
          restore-keys: |
            Library-${{ runner.os }}-


      - name: Build with Unity
        uses: game-ci/unity-builder@v4
        timeout-minutes: 50
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildMethod: BuildScript.BuildMazeGeneratorWithWindowsProfile  # ‚úÖ Correctif ici

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: Builds/Windows 

      - name: Upload Unity logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: Unity-Logs
          path: Library/Logs/Unity

  deployOnPersonalServer:
    name: Deploy on Personal server
    runs-on: windows-latest
    needs: buildForAllSupportedPlatforms
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: Build-StandaloneWindows
          path: Builds/Windows

      - name: Get Artifact ID (Retry)
        run: |
          $API_URL="https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts"
          
          Write-Host "Fetching artifact ID from $API_URL"

          for ($i=1; $i -le 5; $i++) {
            $RESPONSE = Invoke-RestMethod -Uri $API_URL -Headers @{ Authorization = "token ${{ secrets.GITHUB_TOKEN }}" }
            $ARTIFACT_ID = $RESPONSE.artifacts | Where-Object { $_.name -eq "Build-StandaloneWindows" } | Select-Object -ExpandProperty id

            if ($ARTIFACT_ID) {
              Write-Host "‚úÖ Artifact ID trouv√© : $ARTIFACT_ID"
              echo "ARTIFACT_ID=$ARTIFACT_ID" >> $env:GITHUB_ENV
              exit 0
            }

            Write-Host "‚è≥ Artifact introuvable... nouvelle tentative dans 10 secondes ($i/5)"
            Start-Sleep -Seconds 10
          }

          Write-Host "‚ùå Impossible de r√©cup√©rer l'ID de l'artifact apr√®s 5 essais."
          exit 1
        shell: pwsh

      - name: Get Version and Update Server
        run: |
          if (!(Test-Path -Path "build/version.txt")) {
              Write-Host "‚ùå ERREUR: Le fichier build/version.txt est introuvable !"
              exit 1
          }

          $VERSION = Get-Content build/version.txt -Raw
          $API_URL = "https://fabiencaballero.fr/MazeGenerator/version.php"

          $ARTIFACT_URL = "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ env.ARTIFACT_ID }}"

          Write-Host "üîó Artifact URL: $ARTIFACT_URL"

          Invoke-WebRequest -Uri "$API_URL?version=$VERSION&link=$ARTIFACT_URL" -Method Get
        shell: pwsh
