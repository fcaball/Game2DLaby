name: Build MazeGenerator

on: push

permissions:
  contents: write  # Autorise les pushs vers GitHub

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - WebGL # WebGL.
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Free disk space
        uses: jlumbroso/free-disk-space@v1.3.1

      - name: Check disk usage before build
        run: df -h

      - name: Cache Library folder
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      - name: Build with Unity
        uses: game-ci/unity-builder@v4
        timeout-minutes: 50  # Augmente le timeout √† 50 min
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          buildMethod: BuildScript.BuildMazeGeneratorWithWebProfile

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build-WebGL
          path: Builds/WEB

      - name: Upload Unity logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: Unity-Logs
          path: Library/Logs/Unity

  deployOnPersonalServer:
    name: Deploy on Personal server
    runs-on: ubuntu-latest
    needs: buildForAllSupportedPlatforms
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: Build-WebGL
          path: build


      - name: Get Artifact ID (Retry)
        run: |
          API_URL="https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts"
          
          echo "Fetching artifact ID from $API_URL"

          for i in {1..5}; do
            RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "$API_URL")
            ARTIFACT_ID=$(echo "$RESPONSE" | jq -r '.artifacts[] | select(.name=="Build-WebGL") | .id')

            if [ -n "$ARTIFACT_ID" ] && [ "$ARTIFACT_ID" != "null" ]; then
              echo "‚úÖ Artifact ID trouv√© : $ARTIFACT_ID"
              echo "ARTIFACT_ID=$ARTIFACT_ID" >> "$GITHUB_ENV"
              exit 0
            fi

            echo "‚è≥ Artifact introuvable... nouvelle tentative dans 10 secondes ($i/5)"
            sleep 10
          done

          echo "‚ùå Impossible de r√©cup√©rer l'ID de l'artifact apr√®s 5 essais."
          exit 1


      - name: Get Version and Update Server
        run: |
          # V√©rifier si le fichier version.txt existe
          if [ ! -f build/version.txt ]; then
            echo "‚ùå ERREUR: Le fichier build/version.txt est introuvable !"
            exit 1
          fi

          # Lire la version depuis le fichier
          VERSION=$(cat build/version.txt)

          # URL de mise √† jour
          API_URL="https://fabiencaballero.fr/MazeGenerator/version.php"

          # Construire l'URL de t√©l√©chargement de l'artifact
          ARTIFACT_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ env.ARTIFACT_ID }}"

          echo "üîó Artifact URL: $ARTIFACT_URL"

          # Mettre √† jour la version et le lien sur le serveur
          curl -X GET "$API_URL?version=$VERSION&link=$ARTIFACT_URL"
