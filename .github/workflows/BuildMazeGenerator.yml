name: Build Unity Project for Windows

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Unity Windows Standalone on Windows
    runs-on: windows-latest

    steps:
      # Étape 1: Checkout du code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Étape 2: Cacher les dépendances Unity
      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            Library-${{ runner.os }}-

      # Étape 3: Installer Unity avec le lien fourni
      - name: Install Unity
        run: |
          Invoke-WebRequest -Uri https://download.unity3d.com/download_unity/b2e806cf271c/Windows64EditorInstaller/UnitySetup64-6000.0.32f1.exe -OutFile UnitySetup64-6000.0.32f1.exe
          Start-Process -Wait -FilePath UnitySetup64-6000.0.32f1.exe -ArgumentList "/S /D=C:\Unity"
          Remove-Item -Force UnitySetup64-6000.0.32f1.exe

      # Étape 4: Vérification de l'installation d'Unity
      - name: Verify Unity Installation
        run: |
          & "C:\Unity\Editor\Unity.exe" -version

      # Étape 5: Activer la licence Unity (ajouter un fichier .ulf dans les secrets)
          # Étape 5: Activer la licence Unity (ajouter un fichier .ulf dans les secrets)
      - name: Activate Unity License
        run: |
          $xmlContent = @"
          <?xml version="1.0" encoding="UTF-8"?>
          <root>
              <TimeStamp Value="1U">2025-01-29</TimeStamp>
              <Product>Unity</Product>
              <Version>6000.0.32f1</Version>
          </root>
          "@
          $xmlContent | Out-File -FilePath "C:\Unity\Editor\Data\Resources\Licensing\client-ulf-file.ulf" -Force
          
          & "C:\Unity\Editor\Unity.exe" -batchmode -nographics -quit -logFile "C:\build_logs\unity_build.log"

      
      # Étape 6: Créer un répertoire pour les logs et lancer le build Unity pour Windows
      - name: Prepare for Build
        run: |
          New-Item -Path "C:\build_logs" -ItemType Directory -Force
          echo "Starting the build..."
          $env:UNITY_LOG_FILE = "C:\build_logs\unity_build.log"
          & "C:\Unity\Editor\Unity.exe" -batchmode -nographics -quit `
            -projectPath "$(pwd)" `
            -buildTarget StandaloneWindows64 `
            -executeMethod BuildMazeGenerationWindows `
            -logFile $env:UNITY_LOG_FILE

      # Étape 7: Lire le contenu du fichier de log pour obtenir des détails
      - name: Show Build Log
        run: |
          Get-Content "C:\build_logs\unity_build.log"

      # Étape 8: Déplacer le build dans un dossier spécifique
      - name: Move Build to Separate Directory
        run: |
          New-Item -Path build_output -ItemType Directory -Force
          Move-Item -Path Build\* -Destination build_output\ -Force

      # Étape 9: Commit et Push sur la branche 'builds'
      - name: Commit and Push Build to 'builds' Branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -B builds
          git add build_output
          git commit -m "New Unity Windows build"
          git push origin builds --force
